/*
 * AjaxUploader - jQuery Plugin
 * An ajax uploader with progress event
 *
 * Github: https://github.com/aMahmoodi/AjaxUploader
 * 
 * Copyright (c) 2015 Alireza Mahmoodi
 * 
 * Version: 1.1 (07/04/2015)
 * Requires: jQuery v1.3+
 *
 * Dual licensed under the MIT and GPL licenses:
 *   http://www.opensource.org/licenses/mit-license.php
 *   http://www.gnu.org/licenses/gpl.html
 */
!function($){var _OID=0,_ID,_defines=new Object,_public={init:function(a){return _ID="wfs_id_"+ ++_OID,_defines[_ID]=$.extend({url:"",dataType:"json",data:{},success:function(){},error:function(){},complete:function(){},progress:function(){},load:function(){}},a),_private.upload(this),this}},_private={upload:function(a){var b=a[0].files[0],c=a.attr("name"),d=new XMLHttpRequest;d.upload&&(d.upload.onprogress=function(a){var b=a.position||a.loaded,c=a.totalSize||a.total;_defines[_ID].progress({done:b,total:c,percent:Math.floor(1e3*(b/c))/10})}),d.onreadystatechange=function(){if(4==this.readyState){if(200==this.status)switch(_defines[_ID].dataType.toLowerCase()){case"json":_defines[_ID].success(_private.jsonToObj(this.responseText),b,this);break;case"xml":_defines[_ID].success(this.responseXML,b,this);break;case"text":_defines[_ID].success(this.responseText,b,this);break;default:_defines[_ID].success(this.response,b,this)}else _defines[_ID].error(this.response,b,this);_defines[_ID].complete(b,this)}},d.open("post",_defines[_ID].url,!0);var e=new FormData;e.append(c,b),$.each(_defines[_ID].data,function(a,b){e.append(a,b)}),_defines[_ID].load(b,d),d.send(e)},jsonToObj:function(data){return eval("data = "+data),data}};$.fn.ajaxUploader=function(a){return _public[a]?_public[a].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof a&&a?($.error("Method "+a+" does not exist on jQuery.mediaService"),!1):_public.init.apply(this,arguments)}}(jQuery);